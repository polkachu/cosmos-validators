#!/bin/bash

{% if type == 'test' or type == 'testrelay'  %}
{% set snapshot_folder = "testnet-snapshots" %}
{% set wasm_folder = "testnet-wasm" %}
{% set addrbook_folder = "testnet-addrbook" %}
{% else %}
{% set snapshot_folder = "snapshots" %}
{% set wasm_folder = "wasm" %}
{% set addrbook_folder = "addrbook" %}
{% endif %}

# prune node
sudo service {{ network }} stop
sleep 5
{{ user_dir }}/go/bin/cosmprund prune ~/{{ folder }}/data
sleep 5

# Make sure the service is running
sudo service {{ network }} start
sleep 10

# Get block height
BLOCK_HEIGHT=$(curl -s http://localhost:{{ custom_port_prefix }}57/status | jq -r .result.sync_info.latest_block_height)

# Stop service
sudo service {{ network }} stop

# Compress the folder
FILENAME=$(echo {{ network }}_${BLOCK_HEIGHT}.tar.lz4)
WASM_FILENAME='{{ network }}_wasmonly.tar.lz4'
cd {{ user_dir }}/{{ folder }}

{% if wasm is defined and wasm == "outside" %}
tar --exclude=wasm/wasm/cache -cvf - data wasm | lz4 > "{{ user_dir }}/$FILENAME"
tar --exclude=wasm/wasm/cache -cvf - wasm | lz4 > "{{ user_dir }}/$WASM_FILENAME"

{% elif wasm is defined and wasm == "inside" %}
tar --exclude=data/wasm/cache -cvf - data | lz4 > "{{ user_dir }}/$FILENAME"
cd {{ user_dir }}/{{ folder }}/data
tar --exclude=wasm/cache -cvf - wasm | lz4 > "{{ user_dir }}/$WASM_FILENAME"

{% else %}
tar -cvf - data | lz4 > "{{ user_dir }}/$FILENAME"
{% endif %}

# Restart the service
sudo service {{ network }} start

# Transfer the file and then remove the file
cd {{ user_dir }}/
aws s3 --endpoint="{{ snapshot_endpoint }}" --acl="public-read" cp $FILENAME "s3://{{snapshot_folder}}/{{ network }}/" --profile={{ snapshot_profile }}
rm $FILENAME

{% if wasm is defined %}
cd {{ user_dir }}/
aws s3 --endpoint="{{ snapshot_endpoint }}" --acl="public-read" cp $WASM_FILENAME "s3://{{wasm_folder}}/{{ network }}/" --profile={{ snapshot_profile }}
rm $WASM_FILENAME
{% endif %}

# Transfer the addrbook
cd {{ user_dir }}/{{ folder }}/config
aws s3 --endpoint="{{ snapshot_endpoint }}" --acl="public-read" cp addrbook.json "s3://{{addrbook_folder}}/{{ network }}/" --profile={{ snapshot_profile }}
